웹사이트로 채팅방을 만드는 법!

필요한 기술, 개념

WebSocket(웹소켓)
- 양방향 통신을 지원하는 프로토콜
- 서버와 클라이언트 간 실시간으로 데이터를 주고받을 수 있다.

순서
1. 백엔드 서버 구현
- 서버는 클라이언트의 요청을 받아 처리, 다른 클라이언트에게 메세지를 전송하는 역할
- 백엔드 언어와 프레임워크를 선택해야함 ex. Node.js, Express.js

2. 프론트엔드
- 웹소켓을 사용하여 서버와 통신하는 클라이언트를 구현해야한다.
- JavaScript를 사용하여 클라이언트 구현
- Clients : 웹소켓 열기, 서버에서 전달받은 메세지 처리, 채팅 메세지 보내는 기능
- 이를 위해서는 WebSocketAPI 또는 socket.io 같은 라이브러리 사용

3. 사용자 인증과 같은 기능
- 사용자가 채팅방에 접속할 때 인증을 거쳐야 한다.
- 사용자가 메세지를 보내면 다른 사용자에게 노출되어야 한다.
- 이를 위해서 백엔드에서 세션(session)을 관리하고, 사용자 인증과 권한부여를 구현

4. UI구현
- 채팅창, 메시지 입력창, 사용자 목록을 표시
- HTML, CSS, JavaScript로 구현
